name: Publish Artifacts

on:
  push:
    tags:
      - '**'

env:
  OSS_USER: '${{ secrets.OSS_USER }}'
  OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
  OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'
  SIGNING_KEY_NAME: '${{ secrets.SIGNING_KEY_NAME }}'
  SIGNING_KEY_ID: '${{ secrets.SIGNING_KEY_ID }}'
  SIGNING_KEY_PASSPHRASE: '${{ secrets.SIGNING_KEY_PASSPHRASE }}'
  SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'
  GRADLE_PUBLISH_KEY: '${{ secrets.GRADLE_PUBLISH_KEY }}'
  GRADLE_PUBLISH_SECRET: '${{ secrets.GRADLE_PUBLISH_SECRET }}'

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        kotlin: [ '1.6.0', '1.6.10' ]
        jvm_target: [ '1.8', '11', '15' ]

    outputs:
      analysis-version: ${{ steps.get-analysis-version.outputs.analysis-version }}

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3.0.0
        with:
          distribution: 'adopt'
          java-version: '15'

      - name: Build and test with Gradle
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: -PkotlinVersion=${{ matrix.kotlin }} -PjvmTargetVersion=${{ matrix.jvm_target }} build --scan --stacktrace

      - id: get-analysis-version
        name: Get Analysis version
        run: echo "::set-output name=analysis-version::$(head -n 1 build/semver/version.txt)"

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

#      - name: Bundle SARIF report
#        run: mkdir sarif && find . -name '*.sarif' | xargs -I{} cp "{}" ./sarif/
#
#      - name: Upload SARIF report
#        uses: github/codeql-action/upload-sarif@v1.1.5
#        continue-on-error: true
#        with:
#          # Path to SARIF file relative to the root of the repository
#          sarif_file: sarif
#
  publish:
    needs: build
    env:
      JAVA_OPTS: -Xms512m -Xmx1024m

    strategy:
      matrix:
        os: [macos-11, ubuntu-latest, windows-latest]

    runs-on: '${{ matrix.os }}'

    steps:
    - uses: actions/checkout@v3.0.0

    - uses: actions/setup-java@v3.0.0
      with:
        distribution: 'adopt'
        java-version: '15'
        cache: 'gradle'

    - name: Publish alpha/beta/rc artifacts and gradle plugins
      uses: gradle/gradle-build-action@v2.1.3
      if: |
        contains(needs.build.outputs.analysis-version, 'alpha') ||
        contains(needs.build.outputs.analysis-version, 'beta') ||
        contains(needs.build.outputs.analysis-version, 'rc')
      with:
        arguments: --full-stacktrace publishToSonatype closeSonatypeStagingRepository

    - name: Publish final artifacts and gradle plugins
      uses: gradle/gradle-build-action@v2.1.3
      if: |
        !contains(needs.build.outputs.analysis-version, 'alpha') ||
        !contains(needs.build.outputs.analysis-version, 'beta') ||
        !contains(needs.build.outputs.analysis-version, 'rc')
      with:
        arguments: --full-stacktrace publishToSonatype closeSonatypeStagingRepository

    - name: Publish alpha/beta/rc gradle plugins
      uses: gradle/gradle-build-action@v2.1.3
      if: |
        contains(needs.build.outputs.analysis-version, 'alpha') ||
        contains(needs.build.outputs.analysis-version, 'beta') ||
        contains(needs.build.outputs.analysis-version, 'rc')
      with:
        arguments: --full-stacktrace publishPlugins

    - name: Publish final gradle plugins
      uses: gradle/gradle-build-action@v2.1.3
      if: |
        !contains(needs.build.outputs.analysis-version, 'alpha') ||
        !contains(needs.build.outputs.analysis-version, 'beta') ||
        !contains(needs.build.outputs.analysis-version, 'rc')
      with:
        arguments: --full-stacktrace publishPlugins
