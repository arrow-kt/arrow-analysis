name: Build Artifacts for PR

on: pull_request

env:
  JAVA_OPTS: -Xms512m -Xmx1024m
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dorg.gradle.jvmargs=-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"


jobs:
  pull_request:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        kotlin: ['1.6.0', '1.6.10']
        jvm_target: ['1.8', '11', '15']

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3.0.0
        with:
          distribution: 'adopt'
          java-version: '15'

      - name: Build and test with Gradle
        uses: gradle/gradle-build-action@v2.1.4
        with:
          arguments: -PkotlinVersion=${{ matrix.kotlin }} -PjvmTargetVersion=${{ matrix.jvm_target }} build --scan --stacktrace

      - name: Upload reports
        uses: actions/upload-artifact@v3.0.0
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

#      - name: Upload Code Scanning code analysis report
#        if: always()
#        uses: github/codeql-action/upload-sarif@v1
#        with:
#          sarif_file: 'build/reports/detekt/main.sarif'

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  update_api:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        uses: gradle/gradle-build-action@v2.1.4
        with:
          arguments: apiDump

      - name: Stop Gradle daemons
        run: ./gradlew --stop

      - name: "Commit new API files"
        uses: stefanzweifel/git-auto-commit-action@v4.14.0
        with:
          commit_message: Update API files
          file_pattern: /**/api/*.api