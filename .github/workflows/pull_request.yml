name: Build Artifacts for PR

on: pull_request

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx5g -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"

jobs:
  pull_request:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        jvm_target: ['1.8', '11', '17']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -PjvmTargetVersion=${{ matrix.jvm_target }} build --scan --stacktrace

      - name: Upload reports
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Stop Gradle daemons
        run: ./gradlew --stop

      - name: Bundle analysis report
        if: always()
        run: mkdir sarif && find . -name '*.sarif' | xargs -I{} cp "{}" ./sarif/

#      - name: Upload analysis report
#        if: always()
#        uses: github/codeql-action/upload-sarif@v1
#        with:
#          sarif_file: sarif # path relative to root

  update_api:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -PjvmTargetVersion=8 apiDump

      - name: Stop Gradle daemons
        run: ./gradlew --stop

      - name: "Commit new API files"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update API files
          file_pattern: /**/api/*.api
