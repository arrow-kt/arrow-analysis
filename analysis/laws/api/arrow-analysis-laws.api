public final class arrow/analysis/laws/kotlin/ArrayConversionsLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ArrayConversionsLaws;
	public final fun associateByLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun associateLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun associateWithLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun toListLaw ([Ljava/lang/Object;)Ljava/util/List;
	public final fun toMapLaw ([Lkotlin/Pair;)Ljava/util/Map;
	public final fun toSetLaw ([Ljava/lang/Object;)Ljava/util/Set;
}

public final class arrow/analysis/laws/kotlin/ArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ArrayLaws;
	public final fun component1Law ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun component2Law ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun component3Law ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun component4Law ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun component5Law ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun countLaw ([Ljava/lang/Object;)I
	public final fun countLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I
	public final fun distinctByLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun distinctLaw ([Ljava/lang/Object;)Ljava/util/List;
	public final fun elementAtLaw ([Ljava/lang/Object;I)Ljava/lang/Object;
	public final fun elementAtOrNullLaw ([Ljava/lang/Object;I)Ljava/lang/Object;
	public final fun filterIndexedLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun filterLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun filterNotLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun filterNotNullLaw ([Ljava/lang/Object;)Ljava/util/List;
	public final fun firstLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun firstLawWithPredicate ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun firstOrNullLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getLaw ([Ljava/lang/Object;I)Ljava/lang/Object;
	public final fun indexOfFirstLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLastLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLaw ([Ljava/lang/Object;Ljava/lang/Object;)I
	public final fun intersectLaw ([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
	public final fun isEmptyLaw ([Ljava/lang/Object;)Z
	public final fun isNotEmptyLaw ([Ljava/lang/Object;)Z
	public final fun isNullOrEmptyLaw ([Ljava/lang/Object;)Z
	public final fun lastIndexLaw ([Ljava/lang/Object;)I
	public final fun lastIndexOfLaw ([Ljava/lang/Object;Ljava/lang/Object;)I
	public final fun lastLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun lastLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun lastOrNullLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun mapIndexedLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun mapIndexedNotNullLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun mapLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun mapNotNullLaw ([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun noneLaw ([Ljava/lang/Object;)Z
	public final fun randomLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun randomOrNullLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun setLaw ([Ljava/lang/Object;ILjava/lang/Object;)V
	public final fun singleLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun singleOrNullLaw ([Ljava/lang/Object;)Ljava/lang/Object;
	public final fun sizeLaw ([Ljava/lang/Object;)I
	public final fun subtractLaw ([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
	public final fun unionLaw ([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
}

public final class arrow/analysis/laws/kotlin/BooleanArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/BooleanArrayLaws;
	public final fun booleanArrayOfLaw ([Z)[Z
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[Z
	public final fun getLaw ([ZI)Z
	public final fun setLaw ([ZIZ)V
}

public final class arrow/analysis/laws/kotlin/ByteArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ByteArrayLaws;
	public final fun byteArrayOfLaw ([B)[B
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[B
	public final fun getLaw ([BI)B
	public final fun setLaw ([BIB)V
}

public final class arrow/analysis/laws/kotlin/ByteLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ByteLaws;
	public final fun countLeadingZeroBitsLaw (B)I
	public final fun countOneBitsLaw (B)I
	public final fun countTrailingZeroBitsLaw (B)I
	public final fun divLaw (BI)I
	public final fun divLaw (BJ)J
}

public final class arrow/analysis/laws/kotlin/CharArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/CharArrayLaws;
	public final fun charArrayOfLaw ([C)[C
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[C
	public final fun getLaw ([CI)C
	public final fun setLaw ([CIC)V
}

public final class arrow/analysis/laws/kotlin/CharSequenceConversionsLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/CharSequenceConversionsLaws;
	public final fun associateByLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun associateLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun associateWithLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun toHashSetLaw (Ljava/lang/CharSequence;)Ljava/util/HashSet;
	public final fun toListLaw (Ljava/lang/CharSequence;)Ljava/util/List;
	public final fun toMutableListLaw (Ljava/lang/CharSequence;)Ljava/util/List;
	public final fun toSetLaw (Ljava/lang/CharSequence;)Ljava/util/Set;
}

public final class arrow/analysis/laws/kotlin/CharSequenceLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/CharSequenceLaws;
	public final fun countLaw (Ljava/lang/CharSequence;)I
	public final fun countLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)I
	public final fun dropLastLaw (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
	public final fun dropLaw (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
	public final fun elementAtLaw (Ljava/lang/CharSequence;I)C
	public final fun elementAtOrNullLaw (Ljava/lang/CharSequence;I)Ljava/lang/Character;
	public final fun filterIndexedLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)Ljava/lang/CharSequence;
	public final fun filterLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/CharSequence;
	public final fun filterNotLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/CharSequence;
	public final fun firstLaw (Ljava/lang/CharSequence;)C
	public final fun firstLawWithPredicate (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)C
	public final fun firstOrNullLaw (Ljava/lang/CharSequence;)Ljava/lang/Character;
	public final fun getLaw (Ljava/lang/CharSequence;I)C
	public final fun indexOfFirstLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLastLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLawChar (Ljava/lang/CharSequence;CIZ)I
	public final fun indexOfLawString (Ljava/lang/CharSequence;Ljava/lang/String;IZ)I
	public final fun isEmptyLaw (Ljava/lang/CharSequence;)Z
	public final fun isNotEmptyLaw (Ljava/lang/CharSequence;)Z
	public final fun isNullOrEmptyLaw (Ljava/lang/CharSequence;)Z
	public final fun lastIndexLaw (Ljava/lang/CharSequence;)I
	public final fun lastIndexOfLawChar (Ljava/lang/CharSequence;CIZ)I
	public final fun lastIndexOfLawString (Ljava/lang/CharSequence;Ljava/lang/String;IZ)I
	public final fun lastLaw (Ljava/lang/CharSequence;)C
	public final fun lastLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)C
	public final fun lastOrNullLaw (Ljava/lang/CharSequence;)Ljava/lang/Character;
	public final fun lengthLaw (Ljava/lang/CharSequence;)I
	public final fun mapIndexedLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun mapIndexedNotNullLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun mapLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun mapNotNullLaw (Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun noneLaw (Ljava/lang/CharSequence;)Z
	public final fun randomLaw (Ljava/lang/CharSequence;)C
	public final fun singleLaw (Ljava/lang/CharSequence;)C
	public final fun singleOrNullLaw (Ljava/lang/CharSequence;)Ljava/lang/Character;
	public final fun takeLastLaw (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
	public final fun takeLaw (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
	public final fun trimEndLaw (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public final fun trimEndLaw (Ljava/lang/CharSequence;[C)Ljava/lang/CharSequence;
	public final fun trimLaw (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public final fun trimLaw (Ljava/lang/CharSequence;[C)Ljava/lang/CharSequence;
	public final fun trimStartLaw (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public final fun trimStartLaw (Ljava/lang/CharSequence;[C)Ljava/lang/CharSequence;
}

public final class arrow/analysis/laws/kotlin/CollectionConversionsLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/CollectionConversionsLaws;
	public final fun associateByLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun associateLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun associateWithLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun toListLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun toMapLaw (Ljava/util/Collection;)Ljava/util/Map;
	public final fun toSetLaw (Ljava/util/Collection;)Ljava/util/Set;
}

public final class arrow/analysis/laws/kotlin/CollectionLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/CollectionLaws;
	public final fun allLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Z
	public final fun anyLaw (Ljava/util/Collection;)Z
	public final fun anyLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Z
	public final fun countLaw (Ljava/util/Collection;)I
	public final fun countLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)I
	public final fun distinctByLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun distinctLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun dropLaw (Ljava/util/Collection;I)Ljava/util/List;
	public final fun dropWhileLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun elementAtLaw (Ljava/util/Collection;I)Ljava/lang/Object;
	public final fun elementAtOrNullLaw (Ljava/util/Collection;I)Ljava/lang/Object;
	public final fun filterIndexedLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun filterLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun filterNotLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun filterNotNullLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun firstLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun firstLawWithPredicate (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun firstOrNullLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun flatMapIndexedLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun flatMapLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun flattenLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun forEachIndexedLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)V
	public final fun forEachLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun indexOfFirstLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLastLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLaw (Ljava/util/Collection;Ljava/lang/Object;)I
	public final fun intersectLaw (Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Set;
	public final fun isEmptyLaw (Ljava/util/Collection;)Z
	public final fun isNotEmptyLaw (Ljava/util/Collection;)Z
	public final fun isNullOrEmptyLaw (Ljava/util/Collection;)Z
	public final fun lastIndexOfLaw (Ljava/util/Collection;Ljava/lang/Object;)I
	public final fun lastLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun lastLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun lastOrNullLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun mapIndexedLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun mapIndexedNotNullLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun mapLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun mapNotNullLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun minusLaw (Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
	public final fun minusLawWithElements (Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/List;
	public final fun noneLaw (Ljava/util/Collection;)Z
	public final fun onEachIndexedLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;
	public final fun onEachLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;
	public final fun orEmptyLaw (Ljava/util/Collection;)Ljava/util/Collection;
	public final fun plusLaw (Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
	public final fun plusLawWithElements (Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/List;
	public final fun randomLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun randomOrNullLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun reversedLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun shuffledLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun singleLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun singleOrNullLaw (Ljava/util/Collection;)Ljava/lang/Object;
	public final fun sizeLaw (Ljava/util/Collection;)I
	public final fun sortedByDescendingLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun sortedByLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun sortedDescendingLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun sortedLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun sortedWithLaw (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/List;
	public final fun subtractLaw (Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Set;
	public final fun takeLaw (Ljava/util/Collection;I)Ljava/util/List;
	public final fun takeWhileLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun unionLaw (Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Set;
	public final fun unzipLaw (Ljava/util/Collection;)Lkotlin/Pair;
	public final fun zipLaw (Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/List;
	public final fun zipLaw (Ljava/util/Collection;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public final fun zipWithNextLaw (Ljava/util/Collection;)Ljava/util/List;
	public final fun zipWithNextLaw (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
}

public final class arrow/analysis/laws/kotlin/ComparableRangeLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ComparableRangeLaws;
	public final fun rangeToLaw (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lkotlin/ranges/ClosedRange;
}

public final class arrow/analysis/laws/kotlin/DoubleArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/DoubleArrayLaws;
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[D
	public final fun doubleArrayOfLaw ([D)[D
	public final fun getLaw ([DI)D
	public final fun setLaw ([DID)V
}

public final class arrow/analysis/laws/kotlin/EnumLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/EnumLaws;
	public final fun ordinalLaw (Ljava/lang/Enum;)I
}

public final class arrow/analysis/laws/kotlin/FloatArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/FloatArrayLaws;
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[F
	public final fun floatArrayOfLaw ([F)[F
	public final fun getLaw ([FI)F
	public final fun setLaw ([FIF)V
}

public final class arrow/analysis/laws/kotlin/IntArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/IntArrayLaws;
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[I
	public final fun getLaw ([II)I
	public final fun intArrayOfLaw ([I)[I
	public final fun setLaw ([III)V
}

public final class arrow/analysis/laws/kotlin/IntLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/IntLaws;
	public final fun countLeadingZeroBitsLaw (I)I
	public final fun countOneBitsLaw (I)I
	public final fun countTrailingZeroBitsLaw (I)I
	public final fun divLaw (II)I
	public final fun divLaw (IJ)J
}

public final class arrow/analysis/laws/kotlin/ListLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ListLaws;
	public final fun asReversedLaw (Ljava/util/List;)Ljava/util/List;
	public final fun component1Law (Ljava/util/List;)Ljava/lang/Object;
	public final fun component2Law (Ljava/util/List;)Ljava/lang/Object;
	public final fun component3Law (Ljava/util/List;)Ljava/lang/Object;
	public final fun component4Law (Ljava/util/List;)Ljava/lang/Object;
	public final fun component5Law (Ljava/util/List;)Ljava/lang/Object;
	public final fun dropLastLaw (Ljava/util/List;I)Ljava/util/List;
	public final fun elementAtLaw (Ljava/util/List;I)Ljava/lang/Object;
	public final fun elementAtOrNullLaw (Ljava/util/List;I)Ljava/lang/Object;
	public final fun emptyListLaw ()Ljava/util/List;
	public final fun emptyListOfLaw ()Ljava/util/List;
	public final fun emptyMutableListLaw ()Ljava/util/List;
	public final fun firstLaw (Ljava/util/List;)Ljava/lang/Object;
	public final fun firstOrNullLaw (Ljava/util/List;)Ljava/lang/Object;
	public final fun getLaw (Ljava/util/List;I)Ljava/lang/Object;
	public final fun getOrNullLaw (Ljava/util/List;I)Ljava/lang/Object;
	public final fun indexOfFirstLaw (Ljava/util/List;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLastLaw (Ljava/util/List;Lkotlin/jvm/functions/Function1;)I
	public final fun indexOfLaw (Ljava/util/List;Ljava/lang/Object;)I
	public final fun isEmptyLaw (Ljava/util/List;)Z
	public final fun lastIndexLaw (Ljava/util/List;)I
	public final fun lastIndexOfLaw (Ljava/util/List;Ljava/lang/Object;)I
	public final fun lastLaw (Ljava/util/List;)Ljava/lang/Object;
	public final fun lastLaw (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun lastOrNullLaw (Ljava/util/List;)Ljava/lang/Object;
	public final fun listOfLaw ([Ljava/lang/Object;)Ljava/util/List;
	public final fun listOfNotNullLaw (Ljava/lang/Object;)Ljava/util/List;
	public final fun listOfNotNullLaw ([Ljava/lang/Object;)Ljava/util/List;
	public final fun mutableListOfLaw ([Ljava/lang/Object;)Ljava/util/List;
	public final fun orEmptyLaw (Ljava/util/List;)Ljava/util/List;
	public final fun singleLaw (Ljava/util/List;)Ljava/lang/Object;
	public final fun singleOrNullLaw (Ljava/util/List;)Ljava/lang/Object;
	public final fun singletonListOfLaw (Ljava/lang/Object;)Ljava/util/List;
	public final fun takeLastLaw (Ljava/util/List;I)Ljava/util/List;
}

public final class arrow/analysis/laws/kotlin/LongArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/LongArrayLaws;
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[J
	public final fun getLaw ([JI)J
	public final fun longArrayOfLaw ([J)[J
	public final fun setLaw ([JIJ)V
}

public final class arrow/analysis/laws/kotlin/LongLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/LongLaws;
	public final fun countLeadingZeroBitsLaw (J)I
	public final fun countOneBitsLaw (J)I
	public final fun countTrailingZeroBitsLaw (J)I
	public final fun divLaw (JI)J
	public final fun divLaw (JJ)J
}

public final class arrow/analysis/laws/kotlin/MapEntryLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/MapEntryLaws;
	public final fun component1Law (Ljava/util/Map$Entry;)Ljava/lang/Object;
	public final fun component2Law (Ljava/util/Map$Entry;)Ljava/lang/Object;
}

public final class arrow/analysis/laws/kotlin/MapLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/MapLaws;
	public final fun emptyMapLaw ()Ljava/util/Map;
	public final fun emptyMapOfLaw ()Ljava/util/Map;
	public final fun emptyMutableMapLaw ()Ljava/util/Map;
	public final fun entriesLaw (Ljava/util/Map;)Ljava/util/Set;
	public final fun filterKeysLaw (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun filterLaw (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun filterNotLaw (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun filterValuesLaw (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun isEmptyLaw (Ljava/util/Map;)Z
	public final fun isNotEmptyLaw (Ljava/util/Map;)Z
	public final fun isNullOrEmptyLaw (Ljava/util/Map;)Z
	public final fun keysLaw (Ljava/util/Map;)Ljava/util/Set;
	public final fun mapKeysLaw (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun mapOfLaw ([Lkotlin/Pair;)Ljava/util/Map;
	public final fun mapValuesLaw (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
	public final fun minusLaw (Ljava/util/Map;Ljava/lang/Object;)Ljava/util/Map;
	public final fun minusLawWithElements (Ljava/util/Map;Ljava/util/Collection;)Ljava/util/Map;
	public final fun mutableMapOfLaw ([Lkotlin/Pair;)Ljava/util/Map;
	public final fun orEmptyLaw (Ljava/util/Map;)Ljava/util/Map;
	public final fun plusLaw (Ljava/util/Map;Lkotlin/Pair;)Ljava/util/Map;
	public final fun plusLawWithElements (Ljava/util/Map;Ljava/util/Collection;)Ljava/util/Map;
	public final fun plusLawWithMap (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
	public final fun sizeLaw (Ljava/util/Map;)I
	public final fun valuesLaw (Ljava/util/Map;)Ljava/util/Collection;
}

public final class arrow/analysis/laws/kotlin/MathLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/MathLaws;
	public final fun absLaw (D)D
	public final fun absLaw (F)F
	public final fun absLaw (I)I
	public final fun absLaw (J)J
	public final fun absoluteValueLaw (D)D
	public final fun absoluteValueLaw (F)F
	public final fun absoluteValueLaw (I)I
	public final fun absoluteValueLaw (J)J
	public final fun maxLaw (DD)D
	public final fun maxLaw (FF)F
	public final fun maxLaw (II)I
	public final fun maxLaw (JJ)J
	public final fun minLaw (DD)D
	public final fun minLaw (FF)F
	public final fun minLaw (II)I
	public final fun minLaw (JJ)J
	public final fun signLaw (D)D
	public final fun signLaw (F)F
	public final fun signLaw (I)I
	public final fun signLaw (J)I
	public final fun signTopLevelLaw (D)D
	public final fun signTopLevelLaw (F)F
}

public final class arrow/analysis/laws/kotlin/ResultLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ResultLaws;
	public final fun failureLaw-gIAlu-s (Lkotlin/Result$Companion;Ljava/lang/Throwable;)Ljava/lang/Object;
	public final fun getOrNullLaw (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun isFailureLaw (Ljava/lang/Object;)Z
	public final fun mapLaw-KWTtemM (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun successLaw-gIAlu-s (Lkotlin/Result$Companion;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class arrow/analysis/laws/kotlin/SetLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/SetLaws;
	public final fun emptyMutableSetOfLaw ()Ljava/util/Set;
	public final fun emptySetLaw ()Ljava/util/Set;
	public final fun emptySetOfLaw ()Ljava/util/Set;
	public final fun mutableSetOfLaw ([Ljava/lang/Object;)Ljava/util/Set;
	public final fun orEmptyLaw (Ljava/util/Set;)Ljava/util/Set;
	public final fun setOfLaw ([Ljava/lang/Object;)Ljava/util/Set;
	public final fun setOfNotNullLaw (Ljava/lang/Object;)Ljava/util/Set;
	public final fun setOfNotNullLaw ([Ljava/lang/Object;)Ljava/util/Set;
}

public final class arrow/analysis/laws/kotlin/ShortArrayLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ShortArrayLaws;
	public final fun constructorLaw (ILkotlin/jvm/functions/Function1;)[S
	public final fun getLaw ([SI)S
	public final fun setLaw ([SIS)V
	public final fun shortArrayOfLaw ([S)[S
}

public final class arrow/analysis/laws/kotlin/ShortLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/ShortLaws;
	public final fun countLeadingZeroBitsLaw (S)I
	public final fun countOneBitsLaw (S)I
	public final fun countTrailingZeroBitsLaw (S)I
	public final fun divLaw (SI)I
	public final fun divLaw (SJ)J
}

public final class arrow/analysis/laws/kotlin/StringLaws {
	public static final field INSTANCE Larrow/analysis/laws/kotlin/StringLaws;
	public final fun plusLaw (Ljava/lang/String;Ljava/lang/CharSequence;)Ljava/lang/String;
}

public final class arrow/analysis/laws/kotlin/UtilKt {
	public static final fun TODOLaw ()Ljava/lang/Void;
	public static final fun TODOLaw (Ljava/lang/String;)Ljava/lang/Void;
	public static final fun hashCodeLaw (Ljava/lang/Object;)I
	public static final fun lazyOfLaw (Ljava/lang/Object;)Lkotlin/Lazy;
	public static final fun toLaw (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
}

